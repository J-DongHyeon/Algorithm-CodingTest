
해시 테이블을 구현하여 문제를 풀이하였다.
  1. 해시 함수는 나눗셈 법으로 구현하였다.
  2. 데이터 충돌에 대해서는 Chaining 기법을 이용하여 해결하였다.
  3. 처음에는 각 node 의 char 데이터에 대해 모두 1001 Byte 를 할당하였었다. (문제에서 입력되는 최대 문자열의 길이가 1000 이다.)
  그런데 이렇게 문제를 풀어보니 메모리 소모가 굉장히 컸다. 총 518 MB 정도를 소모하였다.
  4. 그래서 메모리 사용을 줄이기 위해 첫 번째 방법으로, 해시 테이블을 주기적으로 리셋 시켜 보았다. 해시 테이블에 삽입되어 있는 데이터들 중
  더 이상 필요가 없는 데이터들을 주기적으로 메모리 해제 시켜줌으로써 메모리 사용을 최소화 시켜 보았다. 하지만 이 방법으로는 겨우 1 MB 정도의 
  메모리만 절약할 수 있었다.
  5. 두 번째 방법으로, node의 char 데이터에 대해 무조건 1001 Byte 를 할당하는 것이 아니라 삽입되는 데이터에 길이에 맞게 필요한 만큼만
  할당하도록 하였다. 이 방법으로 해보니 메모리 사용이 190 MB 정도로 확 줄었다. 또한, 실행 시간 또한 300 ms 더 줄어 들었다.
  실행 시간은 왜 줄어들었나 생각해보니, 메모리를 많이 할당하면 할수록 그에 비례해서 시간도 많이 소모되는 것이라고 생각이 들었다.
  그래서 실제로 테스트를 해보니, 메모리 할당을 크게하면 할수록 걸리는 시간이 더 길다는 것을 확인할 수 있었다.


문제를 풀면서 다시 공부한 부분
  1. 해시 테이블 구현
  2. 포인터 처리
  3. strncpy() 함수 사용법
  4. 메모리를 크게 할당하면 할수록 시간도 더 소비된다.
